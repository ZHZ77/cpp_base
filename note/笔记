C++基础入门
1、C++初识
1.1第一个C++程序

1.2注释
// 单行注释
/* 多行注释 */

1.3变量
作用: 给一段指定的内存空间起名，方便操作这段内存
语法: 数据类型 变量名 = 初始值;
变量存在的意义:方便我们管理内存空间

1.4常量
作用:用于记录程序中不可更改的数据
C++定义常量的两种方式
    1 、# define 宏常量 #define 常量名 常量值
    2、const修饰的变量 const 数据类型 常量名 = 常量值

1.5关键字
作用:关键字是C++中预先保留的单词（标识符）
注意:在定义变量或者常量的时候，不要用关键字

1.6标识符命名规则
作用:C++规定给标识符（变量、常量）命名时，有一套自己的规则
注意:
    标识符不能是关键字
    标识符只能由字母、数字、下划线组成
    第一个字符必须为字母或者下划线
    标识符中字母区分大小写


2数据类型
数据类型有整型
C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存
2.1整型
作用:整型变量表示的是整数类型的数据
C++中能够表示整型类型有以下几种方式，区别在于所占内存空间不同
    short(短整型)           2字节
    int(整型)               4字节
    long(长整型)            win4字节    Linux4字节(32位),8字节(64位)
    longlong(长长整型)       8字节

2.2sizeof关键字
作用:利用sizeof关键字可以统计数据类型所占内存大小
语法:sizeof(数据类型/变量名)

2.3实型(浮点型)
作用:用于表示小数
浮点型变量分为两种
    1.单精度float
    2.双精度double
区别在于表示的有效数字范围不同
    float   4字节   7位有效数字         float f1 = 3.14f  不写这个f会先转为double然后再转为float
    double  8字节   15-16位有效数字     double f2 = 3.14  这个就不用写f因为默认就是f
默认情况下 输出一个小数,会显示出6位有效数字                         科学计数法 3e2=300 3*10^2

2.4字符型
作用:字符型变量用于显示单个字符
语法:char ch = 'a';     
注意:
    在显示字符型变量时,用单引号将字符括起来,不要用双引号
    单引号内只能有一个字符,不可以是字符串
C和C++中字符型变量只占用1个字节
字符型变量并不是吧字符本身放到内存中存储,而是将对应的ASCII编码放入到存储单元  可以用int强转为整形查看对应的ASCII值

2.5转义字符
作用:用于表示一些不能显示出来的ASCII字符
现阶段我们常用的转义字符有: \n  \t  \\

2.6字符串型
作用:用于表示一串字符串
两种风格
    1.C风格字符串:char str1[] = "hello world";
    2.C++风格字符串:string 变量名 = "字符串值";

2.7布尔类型
作用:布尔数据类型代表真或假的值
bool类型只有两个值:
    true    --真(本质是1)
    false   --假(本质是0)
bool类型占1个字节大小

2.8数据的输入
作用:用于从键盘获取数据
关键字:cin
语法:cin >> 变量
注意:
    变量要先定义出来


3运算符
作用:用于执行代码的运算
算术运算符      用于处理四则运算
赋值运算符      用于将表达式的值赋给变量
比较运算符      用于表达式的比较,并返回一个真值或假值
逻辑运算符      用于根据表达式的值返回值=真值或假值

3.1算术运算符
作用:用于处理四则运算
+-*/
%(取模/取余):10 % 3 = 1
++ --

3.2赋值运算符
作用:用于将表达式的值赋给变量
= += -= *= /= %=

3.3比较运算符
作用:用于表达式的比较,并返回一个真值或假值
== != < > <= >=

3.4逻辑运算符
作用:用于根据表达式的值返回值
!非(取反)     &&与(全真为真1)    ||或


4程序流程结构
C/C++支持最基本的三种程序运行结构:顺序结构、选择结构、循环结构
顺序结构:程序按顺序执行,不发生跳转
选择结构:依据条件是否满足,有选择的执行相应功能
循环结构:依据条件是否满足,循环多次执行某段代码
4.1选择结构
4.1.1   if语句
作用:执行满足条件的语句
if语句的三种形式
单行格式if语句
多行格式if语句
多条件if语句





7、指针
7.1指针的基本概念
可以通过指针间接访问内存

7.2指针变量的定义和使用
指针变量定义语法：数据类型 * 变量名；

int a = 10;
int * p = &a;

7.3指针所占内存空间
不管什么数据类型的指针均占用4个字节

7.4空指针和野指针
空：指针变量指向内存中编号为0的空间
野：指针变量指向非法的内存空间


7.5const修饰指针
1const修饰指针 --常量指针
2const修饰常量 --指针常量
3const既修饰指针,又修饰常量

const int * P = &a；
int * const p = &a;






8、结构体
8.1结构体的概念
用户自定义的数据类型

8.2结构体定义和使用
struct 结构体名 { 结构体成员列表 };

struct 结构体名 变量名;
struct 结构体名 变量名 = { 成员1值, 成员2值...}
定义结构体时顺便创建变量            struct 结构体名{ 结构体成员列表 }val;


8.3结构体数组
作用：将自定义的结构体放入到数组中方便维护
语法: struct 结构体名 数组名[元素个数] = { {}, {}, ... };

8.4结构体指针
结构体



